name: Deploy Retina to Kubernetes

on:
  workflow_dispatch:
    inputs:
      helm_image_tag:
        description: 'Helm image tag'
        required: true
        default: 'latest'

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Helm
        uses: azure/setup-helm@v4

      - name: Set up kubectl
        uses: azure/setup-kubectl@v4

      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ vars.AZURE_CLIENT_ID }}
          tenant-id: ${{ vars.AZURE_TENANT_ID }}
          subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}

      - name: Set IMAGE_NAMESPACE variable
        id: imagenamespace
        run: |
          gitUrl=$(git config --get remote.origin.url)
          if [[ "$gitUrl" =~ github\.com[/:]([^/]+)/([^/.]+) ]]; then
            echo "IMAGE_NAMESPACE=${BASH_REMATCH[1],,}/${BASH_REMATCH[2],,}" >> $GITHUB_ENV
          else
            echo "Could not determine IMAGE_NAMESPACE"
            exit 1
          fi

      - name: Deploy Retina with Helm
        env:
          IMAGE_REGISTRY: ghcr.io
          HELM_IMAGE_TAG: ${{ github.event.inputs.helm_image_tag }}
        run: |
          RETINA_IMAGE="$IMAGE_NAMESPACE/retina-agent"
          RETINA_OPERATOR_IMAGE="$IMAGE_NAMESPACE/retina-operator"
          RETINA_INIT_IMAGE="$IMAGE_NAMESPACE/retina-init"

          helm upgrade --install retina ./deploy/standard/manifests/controller/helm/retina/ \
            --namespace kube-system \
            --set image.repository="$IMAGE_REGISTRY/$RETINA_IMAGE" \
            --set image.initRepository="$IMAGE_REGISTRY/$RETINA_INIT_IMAGE" \
            --set image.tag="$HELM_IMAGE_TAG" \
            --set operator.tag="$HELM_IMAGE_TAG" \
            --set image.pullPolicy=Always \
            --set logLevel=info \
            --set os.windows=true \
            --set operator.enabled=true \
            --set operator.enableRetinaEndpoint=true \
            --set operator.repository="$IMAGE_REGISTRY/$RETINA_OPERATOR_IMAGE" \
            --skip-crds \
            --set enabledPlugin_linux="[dropreason\,packetforward\,linuxutil\,dns\,packetparser\]" \
            --set enabledPlugin_win="[ebpfwindows\]" \
            --set enablePodLevel=true \
            --set enableAnnotations=true
