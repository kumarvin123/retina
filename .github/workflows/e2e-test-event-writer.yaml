name: Build E2E Test Event Writer

on:
  pull_request:
    branches: [main]
  merge_group:
    types: [checks_requested]
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

jobs:
  retina-win-e2e-bpf-images:
    name: Build E2E Test Event Writer
    runs-on: windows-latest

    strategy:
      matrix:
        platform: ["windows"]
        arch: ["amd64"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      - uses: actions/setup-go@v5.3.0
        with:
          go-version-file: go.mod
      - run: go version

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Az CLI login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION }}

      - name: Build Images
        shell: bash
        working-directory: test/plugin/event-writer
        run: |
          set -euo pipefail
          Invoke-WebRequest -Uri "https://raw.githubusercontent.com/microsoft/ebpf-for-windows/main/scripts/Setup-DevEnv.ps1" -OutFile "Setup-DevEnv.ps1" -UseBasicParsing


  manifests:
    name: Generate Manifests
    runs-on: ubuntu-latest
    needs:
      [
        retina-win-e2e-bpf-images
      ]

    strategy:
      matrix:
        components: ["retina-win-e2e-bpf-images"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3

      - name: Azure CLI login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION }}

      - name: Generate Manifests
        shell: bash
        run: |
          set -euo pipefail
          az acr login -n ${{ vars.ACR_NAME }}
          make manifest COMPONENT=${{ matrix.components }} \
          IMAGE_REGISTRY=${{ vars.ACR_NAME }}