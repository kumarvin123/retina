name: Build E2E Test Event Writer
on:
  pull_request:
    branches: [main]
  merge_group:
    types: [checks_requested]
  workflow_dispatch:


permissions:
  contents: read
  id-token: write

env:
  EVENT_WRITER_PATH: "${{ github.workspace }}/test/e2e/tools/event-writer/"

jobs:
  retina-win-e2e-bpf-images:
    name: Build E2E Test Event Writer
    runs-on: windows-2022

    strategy:
      matrix:
        platform: ["windows"]
        arch: ["amd64"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      - name: Azure Login
        uses: azure/login@v2
        if: ${{ (github.event_name == 'merge_group') || (github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/dev/v0.0.33-windows' && github.repository == 'microsoft/retina') }}
        with:
          client-id: ${{ vars.AZURE_CLIENT_ID }}
          tenant-id: ${{ vars.AZURE_TENANT_ID }}
          subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}

      - name: Set MSBuild path
        run: |
          echo "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\MSBuild\Current\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Set standalone LLVM path
        run: |
          echo "C:\Program Files\LLVM\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Nuget Restore
        shell: cmd
        run: |
          nuget restore .\event_writer.sln
        working-directory: ${{ env.EVENT_WRITER_PATH }}

      - name: Configure eBPF store
        shell: cmd
        run: |
          .\export_program_info.exe --clear
          .\export_program_info.exe
        working-directory: ${{ env.EVENT_WRITER_PATH }}\packages\eBPF-for-Windows.x64.0.21.0\build\native\bin

      - name: Build Event-Writer
        shell: cmd
        run: |
          msbuild /m /t:Clean /p:Configuration=Release /p:Platform=x64 /restore event_writer.sln
          msbuild /m /p:Configuration=Release /p:Platform=x64 /restore event_writer.sln
        working-directory: ${{ env.EVENT_WRITER_PATH }}

      - name: Determine Docker tag
        shell: pwsh
        run: |
          if ($env:IS_MERGE_GROUP -eq "true") {
            $TAG = $(git tag --points-at HEAD)
            if (-not $TAG) {
              $TAG = $(git rev-parse --short HEAD)
            }
            echo "TAG=$TAG" >> $env:GITHUB_ENV
          }
        env:
          IS_MERGE_GROUP: ${{ (github.event_name == 'merge_group') || (github.event_name == 'workflow_dispatch' && github.repository == 'kumarvin123/retina') }}

      - name: Build Images
        shell: cmd
        run: |
            docker buildx build --file "./Dockerfile" --platform "windows/amd64" --target "windows-amd64" --tag ${{ vars.ACR_NAME }}/${{ github.repository }}/e2e-test-event-writer:latest .
        working-directory: ${{ env.EVENT_WRITER_PATH }}
